

services:
  printscript-ui:
      container_name: 'printscript-ui'
      image: 'ghcr.io/tricolor-austral/printscript-ui:latest'
      pull_policy: always
      expose:
        - "80"

  operations-api:
      container_name: 'operations-api'
      image: 'ghcr.io/tricolor-austral/ingsis-operations:latest'
      pull_policy: always
      expose:
        - "8080"
      depends_on:
        - operations_db
      environment:
        DB_HOST: postgres
        DB_PORT: 5432
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres

  operations_db:
    container_name: 'operations-db'
    image: 'postgres:alpine'
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - operations_volume:/var/lib/postgresql/data

  snippet-runner-api:
      container_name: 'snippet-runner-api'
      image: 'ghcr.io/tricolor-austral/ingsis-snippetrunner:latest'
      pull_policy: always
      depends_on:
        - runner-db
        - redis
  
  runner-db:
    container_name: "runner-db"
    image: postgres:12
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  redis:
    container_name: "redis"
    image: redis:6-alpine

  permission-api:
      container_name: 'permission-api'
      image: 'ghcr.io/tricolor-austral/ingsis-permission:latest'
      pull_policy: always
      environment:
        DB_HOST: permission_db
        DB_PORT: 5432
        DB_NAME: printscript-permission
        DB_USER: ${POSTGRES_USER}
        DB_PASSWORD: ${POSTGRES_PASSWORD}
      depends_on:
        - permission_db

  permission_db:
      image: 'postgres:alpine'
      environment:
        - POSTGRES_DB=printscript-permission
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      volumes:
        - permission_volume:/var/lib/postgresql/data
  proxy:
    container_name: 'reverse-proxy-dev'
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./conf.d/:/etc/nginx/conf.d/:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
        - duckdns
#        - certbot
        - printscript-ui
        - operations-api
        - snippet-runner-api
        - permission-api
        - operations_db
        - permission_db
  duckdns:
    image: lscr.io/linuxserver/duckdns:version-d63af1c1
    container_name: duckdns
    environment:
      - SUBDOMAINS=tricolor-austral
      - TOKEN=${DUCKDNS_TOKEN}
    restart: unless-stopped
  certbot:
    container_name: "certbot"
    image: certbot/certbot:latest
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
#    command: certonly --webroot -w /var/www/certbot --force-renewal --email marco.castagnaro@ing.austral.edu.ar -d tricolor-austral.duckdns.org --agree-tos
  api-manager:
    container_name: "asset_service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    environment:
      AZURE_HOST: "http://azurite"

  azurite-manager:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace
volumes:
    operations_volume:
    permission_volume:
    snippetrunner_volume:
    blob:
